{"version":3,"sources":["components/MovieCard/MovieCard.js","components/MoviesList/MoviesList.js","components/NewMovie/NewMovie.js","App.js","index.js"],"names":["MovieCard","title","description","imgUrl","imdbUrl","className","src","alt","href","defaultProps","MoviesList","movies","map","movie","key","imdbId","NewMovie","state","errors","handleChange","event","target","name","value","setState","handleSubmit","preventDefault","props","addMovie","this","onSubmit","type","placeholder","onChange","onClick","Component","App","moviesFromServer","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.b27cca60.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport './MovieCard.scss';\n\nexport const MovieCard = ({ title, description, imgUrl, imdbUrl }) => (\n  <div className=\"card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {description}\n        <br />\n        <a href={imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n\nMovieCard.propTypes = {\n  title: PropTypes.string.isRequired,\n  description: PropTypes.string,\n  imgUrl: PropTypes.string.isRequired,\n  imdbUrl: PropTypes.string.isRequired,\n};\n\nMovieCard.defaultProps = {\n  description: '',\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\n\nexport const MoviesList = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard key={movie.imdbId} {...movie} />\n    ))}\n  </div>\n);\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      title: PropTypes.string.isRequired,\n      description: PropTypes.string,\n      imgUrl: PropTypes.string.isRequired,\n      imdbUrl: PropTypes.string.isRequired,\n    }),\n  ),\n};\n\nMoviesList.defaultProps = {\n  movies: [],\n};\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nexport class NewMovie extends Component {\n  state = {\n    title: '',\n    description: '',\n    imgUrl: '',\n    imdbUrl: '',\n    imdbId: '',\n    errors: {\n      title: false,\n      imgUrl: false,\n      imdbUrl: false,\n      imdbId: false\n    }\n  };\n\n  handleChange = (event) => {\n    const { name, value } = event.target;\n\n    this.setState(state => ({\n      ...state,\n      [name]: value,\n      errors: {\n        ...state.errors,\n        [`${name}`]: false,\n      }\n    }));\n  };\n\n  handleSubmit = (event) => {\n    const {\n      title,\n      imgUrl,\n      imdbUrl,\n      imdbId\n    } = this.state;\n\n    event.preventDefault();\n\n    this.setState(state => ({\n      ...state,\n      errors: {\n        title: !state.title,\n        imgUrl: !state.imgUrl,\n        imdbUrl: !state.imdbUrl,\n        imdbId: !state.imdbId\n      }\n    }))\n\n\n    if (!title) {\n      return;\n    }\n\n    if (!imgUrl) {\n      return;\n    }\n\n    if (!imdbUrl) {\n      return;\n    }\n\n    if (!imdbId) {\n      return;\n    }\n\n    this.props.addMovie({ ...this.state })\n\n    this.setState({\n      title: '',\n      description: '',\n      imgUrl: '',\n      imdbUrl: '',\n      imdbId: '',\n      errors: {\n        title: false,\n        imgUrl: false,\n        imdbUrl: false,\n        imdbId: false\n      }\n    });\n  };\n\n  render() {\n    const {\n      title,\n      description,\n      imgUrl,\n      imdbUrl,\n      imdbId,\n      errors\n    } = this.state;\n\n    return (\n      <form\n        onSubmit={this.handleSubmit}\n      >\n        <input\n          type=\"text\"\n          placeholder=\"Enter the title\"\n          name=\"title\"\n          value={title}\n          onChange={this.handleChange}\n        />\n        {errors.title && <span>Enter the correct title</span>}\n\n        <input\n          type=\"text\"\n          placeholder=\"Enter the description\"\n          name=\"description\"\n          value={description}\n          onChange={this.handleChange}\n        />\n\n        <input\n          type=\"text\"\n          placeholder=\"Enter the image URL\"\n          name=\"imgUrl\"\n          value={imgUrl}\n          onChange={this.handleChange}\n        />\n        {errors.imgUrl && <span>Enter the correct URL</span>}\n\n        <input\n          type=\"text\"\n          placeholder=\"Enter the IMDB URL\"\n          name=\"imdbUrl\"\n          value={imdbUrl}\n          onChange={this.handleChange}\n        />\n        {errors.imdbUrl && <span>Enter the correct URL</span>}\n\n        <input\n          type=\"text\"\n          placeholder=\"Enter the IMDB ID\"\n          name=\"imdbId\"\n          value={imdbId}\n          onChange={this.handleChange}\n        />\n        {errors.imdbUrl && <span>Enter the correct ID</span>}\n\n        <button\n          type=\"submit\"\n          onClick={this.handleSubmit}\n        >\n          Add Movie\n        </button>\n      </form>\n    );\n  }\n};\n\nNewMovie.propTypes = {\n  addMovie: PropTypes.func.isRequired\n};\n","import React, { Component } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { NewMovie } from './components/NewMovie';\nimport moviesFromServer from './api/movies.json';\n\nexport class App extends Component {\n  state = {\n    movies: moviesFromServer,\n  };\n\n  addMovie = (movie) => {\n    this.setState(state => ({\n      movies: [...state.movies, movie]\n    }))\n  };\n\n  render() {\n    const { movies } = this.state;\n\n    return (\n      <div className=\"page\">\n        <div className=\"page-content\">\n          <MoviesList movies={movies} />\n        </div>\n        <div className=\"sidebar\">\n          <NewMovie addMovie={this.addMovie} />\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}